{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww11800\viewh12760\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 e.g.\
	#!/ban/bash\
	answer()\{\
		if [$1 -eq 31 ]; then\
			echo \'a1\'b0This month: the 31st\'a1\'b1\
		else\
			echo \'a1\'b0this month: the $\{1\}th\'a1\'b1\
		fi\
	\}\
\
Testing\
	-essential part of the development \
		-anytime through development -not just at end\
		-begins before you start coding -expected behaviour \
		-test suits - set of tests representing this behaviour\
	-not debugging \
		-debugging is freq ad hc\
		-systematic, not ad hc, repeatable\
	-can\'a1\'aft guarantee correctness - can only prove wrongs\
	-as a developer you should test\
	-but you should also have a test\
		-i.e. 2 different people\
		-avoid biases\
\
	-2 types of testing\
		-human testing\
			-humans looking over code, find flaws\
			-code inspections, walkthroughs\
			\
		-machine testing \
			-automated test\
			-run program on selected input, check against spec\
			-black /gray / white -box testing\
				-black box -> no knowledge \
				-white box -> full knowledge\
				-gray box -> some knowledge\
		-approach \
			-start with black box, supplement with white box\
				-check interface, use\
				-various class of input\
				-data\
				-multi simulators  \
				-extreme case\
			-white box\
				-ensure exaction of all logical parts\
				-make sure every function runs\
			-these are all logical/functional test\
			-also have preference test - is the program efficient(enough)?\
			-regression test\
				-test suits consist of all box tests\
				-as you add new functionally, add new tests\
				-new changes to a program don\'a1\'aft break old test cases\
					-always add\
					-never remove\
\
C++\
	-Note\
		-main must return an int in c++\
		-c++ I/O: uses header <iostream>\
			-can use stdio.h printf -but you shouldn\'a1\'aft\
			-output:\
				-std::cout<<\'a1\'ad..<<\'a1\'ad.<<\'a1\'ad.<<std::endl;\
				-std is a namespace, collection of features\
				-using namespace std, std, lets you use cout, endl\
					-without std:: in front\
			-return statement - returns a status code ($? -bash)\
				-if left ant, main returns 0\
\
	-Compiling \
		-g++-5 			-std:c++14 		program.cc           -o            program\
        compiler version     c++ version    program to compile   output     name of exe\
\
	-Input/Output\
		-3 I/O stamens\
			-cout -print to stdout\
			-cin - reads from stdin\
			-cerr -prints to stder \
		-I/O operators:\
			-	<< \'a1\'b0put to\'a1\'b1 eg cerr<<x;\
			-	>> \'a1\'b0get from\'a1\'b1 eg cin >>y;\
		-e.g. \
			-add 2 numbers\
\
		#include<iostream>\
		using namespace std;\
		int main()\
		\{\
			int x,y;\
			cin >> x >> y;\
			cout << x+7 <<endl;\
		\}\
\
		-cin >> ignores whitespace\
		-cin >>x >>y  gets 2 integers into x and y\
		-if a read fails cin.fail() will be true\
		-if we hit EOF, cin.eof() will be true -note if EOF, both flags will be triggered(i.e. fails first, then triggers EOF)\
\
		-e.g.\
		int main()\
		\{\
			while(true)\
			\{\
				cin >> i;\
				if(cin.fail())\
				\{\
					break;\
				]\
				cout << i << endl;\
			\}\
		\}\
\
\
\
}